services:
  # datadog-agent:
  #   image: datadog/agent:latest
  #   env_file:
  #   - docker.env
  #   volumes:
  #   - /var/run/docker.sock:/var/run/docker.sock:ro
  #   - /proc/:/host/proc/:ro
  #   - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #   ports:
  #   - 8126:8126
  #   networks:
  #     - app-network
  #   environment:
  #   - DD_APM_ENABLED=true
  #   - DD_APM_NON_LOCAL_TRAFFIC=true
  #   - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
  #   - DD_AC_EXCLUDE=name:datadog-agent
  #   - DD_HOSTNAME=profiler-example
  #   cgroup: "host"
  #   pid: "host"

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: cqrs
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: cqrs
    networks:
      - app-network
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    networks:
      - app-network
    environment:
      ADMINER_DESIGN: 'pepa-linha'
      ADMINER_DEFAULT_SERVER: 'postgres'
    ports:
      - 8080:8080

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9191:9090" # Prometheus server port (mapped to 9091 to avoid conflict)
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  postgres_data:
  grafana-storage:
networks:
  app-network:
    driver: bridge
