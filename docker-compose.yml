services:
  # datadog-agent:
  #   image: datadog/agent:latest
  #   env_file:
  #   - docker.env
  #   volumes:
  #   - /var/run/docker.sock:/var/run/docker.sock:ro
  #   - /proc/:/host/proc/:ro
  #   - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #   ports:
  #   - 8126:8126
  #   networks:
  #     - app-network
  #   environment:
  #   - DD_APM_ENABLED=true
  #   - DD_APM_NON_LOCAL_TRAFFIC=true
  #   - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
  #   - DD_AC_EXCLUDE=name:datadog-agent
  #   - DD_HOSTNAME=profiler-example
  #   cgroup: "host"
  #   pid: "host"

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: youtoo
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: youtoo
    networks:
      - app-network
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # otel-collector:
  #   image: otel/opentelemetry-collector-contrib
  #   volumes:
  #     - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
  #   ports:
  #     - 1888:1888 # pprof extension
  #     - 8888:8888 # Prometheus metrics exposed by the Collector
  #     - 8889:8889 # Prometheus exporter metrics
  #     - 13133:13133 # health_check extension
  #     - 4317:4317 # OTLP gRPC receiver
  #     - 4318:4318 # OTLP http receiver
  #     - 55679:55679 # zpages extension

  # jaeger:
  #   image: jaegertracing/all-in-one:1.47
  #   container_name: jaeger
  #   environment:
  #     - COLLECTOR_OTLP_ENABLED=true
  #   ports:
  #     - "4317:4317"
  #     - "16686:16686"
  #   restart: unless-stopped

  # seq:
  #   image: datalust/seq
  #   container_name: seq
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SEQ_FIRSTRUN_ADMINPASSWORDHASH=QGn6SCWIc6ypIJkHOur2JgybRf4Z/i+v6QBQf2Qs2cY5H7P66gszh4c0WQxjHLEe7hsDokvz+mzHbFUOJgeDSh450JhavlH/KArdxi1CtB/E
  #   ports:
  #     - "8081:80"
  #     - "5341:5341"
  #   restart: unless-stopped

  adminer:
    image: adminer
    restart: always
    networks:
      - app-network
    environment:
      ADMINER_DESIGN: 'pepa-linha'
      ADMINER_DEFAULT_SERVER: 'postgres'
    ports:
      - 8080:8080

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9191:9090" # Prometheus server port (mapped to 9091 to avoid conflict)
  #   networks:
  #     - app-network

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - app-network
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-storage:/var/lib/grafana

volumes:
  postgres_data:
  grafana-storage:
networks:
  app-network:
    driver: bridge
